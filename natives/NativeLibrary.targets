<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <TargetType Condition="'$(TargetType)'==''">library</TargetType>
    <IgnoreDefaultIncludeGroups Condition="'$(IgnoreDefaultIncludeGroups)'==''">false</IgnoreDefaultIncludeGroups>
    <Compiler Condition="'$(Compiler)'==''">g++</Compiler>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Version)' == '' ">
    <VersionPrefix Condition=" '$(VersionPrefix)' == '' ">1.0.0</VersionPrefix>
    <Version Condition=" '$(VersionSuffix)' != '' ">$(VersionPrefix)-$(VersionSuffix)</Version>
    <Version Condition=" '$(Version)' == '' ">$(VersionPrefix)</Version>
  </PropertyGroup>

  <PropertyGroup>
    <Authors Condition=" '$(Authors)'=='' ">$(AssemblyName)</Authors>
    <Company Condition=" '$(Company)'=='' ">$(Authors)</Company>
    <AssemblyTitle Condition=" '$(AssemblyTitle)' == '' ">$(AssemblyName)</AssemblyTitle>
    <Product Condition=" '$(Product)' == ''">$(AssemblyName)</Product>
  </PropertyGroup>


  <PropertyGroup Condition="'$(OS)'=='Windows_NT'">
    <CompilerIntermediateExt Condition="'$(CompilerIntermediateExt)'==''">.obj</CompilerIntermediateExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OS)'=='Unix'">
    <CompilerIntermediateExt Condition="'$(CompilerIntermediateExt)'==''">.o</CompilerIntermediateExt>
    <!-- TODO: MSBuild internally overwrites this with `.exe` - there seems to be no way to fix this. -->
    <TargetExt Condition="'$(TargetType)'=='exe'"> </TargetExt>
    <TargetExt Condition="'$(TargetType)'=='library'">.so</TargetExt>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OS)'=='OSX'">
    <CompilerIntermediateExt Condition="'$(CompilerIntermediateExt)'==''">.o</CompilerIntermediateExt>
    <!-- TODO: MSBuild internally overwrites this with `.exe` - there seems to be no way to fix this. -->
    <TargetExt Condition="'$(TargetType)'=='exe'"> </TargetExt>
    <TargetExt Condition="'$(TargetType)'=='library'">.dylib</TargetExt>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Force ProduceReferenceAssembly to be false even if a Common.trops or Common.targets overrode it -->
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
  </PropertyGroup>

  <!-- TODO: These should be detected based on the compiler. -->
  <PropertyGroup Condition="'$(CompilerOptions)'!=''">
    <CompilerOptions Condition="'$(Platform)'=='x86'">-m32 $(CompilerOptions)</CompilerOptions>
    <CompilerOptions Condition="'$(Platform)'=='x64'">-m64 $(CompilerOptions)</CompilerOptions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(CompilerOptions)'==''">
    <CompilerOptions Condition="'$(Platform)'=='x86'">-m32</CompilerOptions>
    <CompilerOptions Condition="'$(Platform)'=='x64'">-m64</CompilerOptions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(LinkerOptions)'!=''">
    <LinkerOptions Condition="'$(Platform)'=='x86'">-m32 $(LinkerOptions)</LinkerOptions>
    <LinkerOptions Condition="'$(Platform)'=='x64'">-m64 $(LinkerOptions)</LinkerOptions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(LinkerOptions)'==''">
    <CompilerOptions Condition="'$(Platform)'=='x86'">-m32</CompilerOptions>
    <CompilerOptions Condition="'$(Platform)'=='x64'">-m64</CompilerOptions>
  </PropertyGroup>

  <PropertyGroup>
    <LinkerOptions Condition="'$(TargetType)'=='library'">$(LinkerOptions) -shared</LinkerOptions>
  </PropertyGroup>

  <PropertyGroup Condition="'$(LinkerOptions)'==''">
    <LinkerOptions Condition="'$(TargetType)'=='library'">-shared</LinkerOptions>
  </PropertyGroup>

  <!-- Group definitions -->
  <ItemGroup Condition="'$(IgnoreDefaultIncludeGroups)'=='false'">
      <Compile Include="**/*.cpp;**/*.cxx;**/*.cc;**/*.c++;**/*.c">
        <_LinkOutputName>$(IntermediateOutputPath)%(Identity)$(CompilerIntermediateExt)</_LinkOutputName>
      </Compile>
      <Link Include="@(Compile->'%(_LinkOutputName)')" />
      <Clean Include="@(Link)" />
      <Clean Include="$(IntermediateOutputPath)$(AssemblyName)$(TargetExt)" />
  </ItemGroup>

  <Import Project="$(MSBuildToolsPath)/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets" Condition="Exists('$(MSBuildToolsPath)/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" />

  <Target Name="CoreCompile" Inputs="@(Compile)" Outputs="@(Link)">
    <Exec Command="$(Compiler) $(CompilerOptions) -c %(Compile.Identity) -o %(Compile._LinkOutputName)" />
    <Message Text="%(Compile.Identity) -> %(Compile._LinkOutputName)" />
  </Target>

  <Target Name="CoreLink" AfterTargets="CoreCompile" Inputs="@(Link)" Outputs="$(IntermediateOutputPath)$(AssemblyName)$(TargetExt)">
    <PropertyGroup>
      <InputFiles>@(Link, ' ')</InputFiles>
    </PropertyGroup>
    <Exec Command="$(Compiler) $(LinkerOptions) $(InputFiles) -o $(IntermediateOutputPath)$(AssemblyName)$(TargetExt)" />
  </Target>

  <!-- Targets needed to integrate nicely... -->
  <Target Name="CreateManifestResourceNames" />

</Project>
